option explicit
Sub ImportSheetsByFutaku()
    Dim defSheet As Worksheet
    Set defSheet = ThisWorkbook.Sheets("仕様_要件定義")

    Dim targetPaths As Range, pathCell As Range
    Dim futakuList As Range, futakuCell As Range
    Dim futakuNumbers() As String
    Dim i As Long
    Dim matchFound As Boolean
    Dim futakuMatch As String

    ' 付託No.一覧を配列に格納（M5:M10）
    Set futakuList = defSheet.Range("M5:M10")
    ReDim futakuNumbers(1 To futakuList.Count)
    i = 1
    For Each futakuCell In futakuList
        If Len(Trim(futakuCell.Value)) > 0 Then
            futakuNumbers(i) = Trim(futakuCell.Value)
            i = i + 1
        End If
    Next futakuCell

    ' ファイルパス一覧（L5:L10）
    Set targetPaths = defSheet.Range("L5:L10")

    Dim wbSource As Workbook
    Dim sourcePath As String
    Dim tempBook As Workbook
    Dim newSheet As Worksheet
    Dim sht As Worksheet
    Dim sourceSheet As Worksheet

    Application.ScreenUpdating = False

    For Each pathCell In targetPaths
        sourcePath = Trim(pathCell.Value)
        If Len(sourcePath) = 0 Then GoTo NextFile

        ' 付託No.が含まれているかチェック
        matchFound = False
        For i = LBound(futakuNumbers) To UBound(futakuNumbers)
            If InStr(sourcePath, futakuNumbers(i)) > 0 Then
                futakuMatch = futakuNumbers(i)
                matchFound = True
                Exit For
            End If
        Next i

        If Not matchFound Then
            MsgBox "付託No.が一致しないファイルがあります：" & vbCrLf & sourcePath, vbExclamation
            GoTo NextFile
        End If

        ' ブックを開く（ReadOnly）
        Set wbSource = Workbooks.Open(Filename:=sourcePath, ReadOnly:=True)

        ' 表示されている通常シートのみを対象にする
        Set sourceSheet = Nothing
        For Each sht In wbSource.Worksheets
            If sht.Visible = xlSheetVisible And sht.Type = xlWorksheet Then
                Set sourceSheet = sht
                Exit For
            End If
        Next sht

        If sourceSheet Is Nothing Then
            MsgBox "コピー可能な表示シートが見つかりません：" & vbCrLf & sourcePath, vbExclamation
            wbSource.Close SaveChanges:=False
            GoTo NextFile
        End If

        ' 中継ブックを作って、ちゃんと見えるシートをコピー
        Set tempBook = Workbooks.Add(xlWBATWorksheet)
        sourceSheet.Cells.Copy Destination:=tempBook.Sheets(1).Cells(1, 1)

        ' 元ブックを閉じる
        wbSource.Close SaveChanges:=False

        ' 既存シート削除（上書きリフレッシュ対応）
        On Error Resume Next
        ThisWorkbook.Sheets(futakuMatch).Delete
        On Error GoTo 0

        ' 新しいシートを作成して中身を貼り付け
        Set newSheet = ThisWorkbook.Sheets.Add(After:=ThisWorkbook.Sheets(ThisWorkbook.Sheets.Count))
        newSheet.Name = futakuMatch
        tempBook.Sheets(1).Cells.Copy Destination:=newSheet.Cells(1, 1)

        ' 一時ブックを閉じる
        Application.DisplayAlerts = False
        tempBook.Close SaveChanges:=False
        Application.DisplayAlerts = True

NextFile:
    Next pathCell

    Application.ScreenUpdating = True
    MsgBox "シート読み込み完了しました！", vbInformation
End Sub
